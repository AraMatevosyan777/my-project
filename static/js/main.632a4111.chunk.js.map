{"version":3,"sources":["assets/images/loader.svg","assets/images/editIcon.svg","assets/images/saveIcon.svg","components/Login/Login.module.css","components/NavBar/NavBar.jsx","helpers/validators/validators.js","components/common/FormsControl/FormsControl.jsx","api/api.js","redux/authReducer.js","components/Login/Login.jsx","redux/appreducer.js","components/common/Loader/Loader.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Profile/ProfileInfo/status.jsx","components/common/FollowButton/FollowButton.jsx","components/Profile/ProfileInfo/ProfilePhoto.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileContacts/ProfileContacts.jsx","components/Profile/Profile.jsx","redux/profileReducer.js","redux/usersReducer.js","components/Profile/ProfileContainer.jsx","components/Users/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/Users/users.module.css","components/common/common.module.css","components/NavBar/navbar.module.css","assets/images/user.jpg"],"names":["module","exports","NavBar","className","m","Navbar","navbarBody","activeClassName","active","to","required","value","Input","input","meta","props","haserror","touched","error","instance","axios","baseURL","withCredentials","headers","ProfileAPI","userId","get","status","put","photo","formData","FormData","append","profile","UsersAPI","pageSize","page","post","delete","AuthAPI","email","password","rememberMe","captcha","initialState","id","login","isAuth","captchaUrl","setAuthData","type","payload","getAuthMe","dispatch","a","response","data","resultCode","getCaptchaUrl","url","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","formField","Field","name","component","validate","placeholder","formError","Captcha","src","alt","connect","state","auth","message","messages","length","stopSubmit","_error","loginForm","loginTitle","initialized","Loader","loader","Header","onClick","logout","href","HeaderContainer","this","React","Component","Status","useState","setStatus","editMode","setEditMode","useEffect","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","onDoubleClick","isOwner","FollowButton","followed","unfollow","follow","followingInProgress","btnBlock","disabled","some","ProfilePhoto","photos","large","userPhoto","updatePhoto","target","files","isFollowed","ProfileInfo","Contacts","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","rel","editIcon","activateEditMode","ContactsReduxForm","autoComplete","saveIcon","ProfileContacts","updateProfile","then","initialValues","Profile","getProfile","getFollow","users","totalCount","loading","usersReducer","action","count","user","isFetching","filter","setPage","followToggle","isFollowingProgress","ProfileContainer","match","params","history","push","getStatus","refreshProfile","prevProps","prevState","compose","withRouter","profilePage","getState","Promise","reject","User","small","Paginator","pagesCount","pages","i","portionCount","Math","ceil","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","classnames","currentPage","Users","UsersContainer","getUsers","usersPage","items","App","initializeApp","path","render","app","Boolean","window","location","hostname","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.632a4111.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.c260a9ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/editIcon.7f4f12d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/saveIcon.ea9db153.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__3uH9n\",\"loginTitle\":\"Login_loginTitle__3WeaU\",\"formField\":\"Login_formField__Ly0w3\",\"formError\":\"Login_formError__2CqQb\",\"captcha\":\"Login_captcha__2v3he\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport m from './navbar.module.css';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className={m.Navbar}>\r\n      <div className={m.navbarBody}>\r\n        <NavLink activeClassName={m.active} to=\"/profile\">Profile</NavLink>\r\n        <NavLink activeClassName={m.active} to=\"/users\">Users</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar;","export const required = value => {\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length must be ${maxLength} symbols`;\r\n    return undefined\r\n}","import React from 'react';\r\nimport './FormsControl.css';\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    let haserror = meta.touched && meta.error\r\n    return(\r\n        <div className='formControls'>\r\n            <input {...input} {...props}/>\r\n            {haserror &&\r\n            <div className='error'>{meta.error}</div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}","import *as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: ('https://social-network.samuraijs.com/api/1.0/'),\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"30000b76-71b0-4b3f-8e1a-d2b4657a07ad\"\r\n    }\r\n})\r\n\r\nexport const ProfileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    updatePhoto(photo){\r\n        let formData = new FormData();\r\n        formData.append('image',photo)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfile(profile){\r\n        return instance.put(`profile`, profile)\r\n    },\r\n    getFollow(userId){\r\n        return instance.get(`/follow/${userId}`)\r\n    },\r\n}\r\n\r\nexport const UsersAPI = {\r\n    getUsers(pageSize,page){\r\n        return instance.get(`users?count=${pageSize}&page=${page}`)\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n}\r\n\r\nexport const AuthAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email,password,rememberMe,captcha){\r\n        return instance.post(`auth/login`, {email,password,rememberMe,captcha})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    },\r\n    getCaptcha(){\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n}","import { AuthAPI } from \"../api/api\"\r\nimport { stopSubmit } from \"redux-form\";\r\nconst SET_AUTH_DATA = 'SET_AUTH_DATA';\r\nconst SET_CAPTCHA = 'SET_CAPTCHA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n      case SET_AUTH_DATA:\r\n          return{\r\n              ...state,\r\n              ...action.payload\r\n          }\r\n      case SET_CAPTCHA:\r\n          return{\r\n              ...state,\r\n              captchaUrl: action.captcha\r\n          }\r\n        default:\r\n            return state\r\n    };\r\n}\r\n\r\nconst setAuthData = (id,email,login,isAuth,captcha) => ({type: SET_AUTH_DATA, payload:{id,email,login,isAuth,captcha}});\r\nconst setCaptcha= (captcha) => ({type: SET_CAPTCHA, captcha});\r\n\r\nexport const getAuthMe = () => async(dispatch) => {\r\n    let response = await AuthAPI.me();\r\n    if(response.data.resultCode === 0){\r\n        let {id,email,login} = response.data.data;\r\n        dispatch(setAuthData(id,email,login,true, null))\r\n    }\r\n}\r\nexport const login = (email,password,rememberMe,captcha) => async(dispatch) => {\r\n    let response = await AuthAPI.login(email,password,rememberMe,captcha);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(getAuthMe())\r\n    }else{\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async(dispatch) => {\r\n    let response = await AuthAPI.getCaptcha();\r\n        dispatch(setCaptcha(response.data.url));\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await AuthAPI.logout();\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setAuthData(null,null,null,false,null));\r\n    }\r\n}\r\n","import React from 'react';\r\nimport m from './Login.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required } from '../../helpers/validators/validators';\r\nimport { Input } from '../common/FormsControl/FormsControl';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/authReducer';\r\n\r\nconst Login = (props) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    let {email,password,rememberMe,captcha} = formData\r\n    props.login(email,password,rememberMe,captcha)\r\n  }\r\n  if(props.isAuth) return <Redirect to='/profile'/>\r\n  return (\r\n    <div className={m.loginForm}>\r\n      <div className={m.loginTitle}>\r\n        <h1>Login to Social Network</h1>\r\n        <h3>Login: aro.matevosyan777@gmail.com</h3>\r\n        <h3>Password: 123456789</h3>\r\n      </div>\r\n      <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={m.formField}>\r\n        <Field name='email' component={Input} validate={[required]} placeholder='Enter your email'/>\r\n      </div>\r\n      <div className={m.formField}>\r\n        <Field name='password'  component={Input} validate={[required]} type='password' placeholder='Password' />\r\n      </div>\r\n      <div className={m.formField}>\r\n      <span>remember me</span>  \r\n      <Field name='rememberMe' component='input' type='checkbox'/>\r\n      </div>\r\n      {props.error && \r\n      <div className={m.formError}>{props.error}</div>\r\n      }\r\n      {props.captchaUrl && \r\n        <Captcha captchaUrl={props.captchaUrl}/>\r\n      }\r\n      <div className={m.formField}>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Captcha = (props) => {\r\n  return(\r\n    <div className={m.captcha}>\r\n      <img src={props.captchaUrl} alt=\"\"/>\r\n      <Field component='input' name='captcha' type=\"text\"/>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mstp = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n})\r\n\r\nexport default connect(mstp,{login})(Login);","import { getAuthMe } from \"./authReducer\";\r\n\r\nconst INITIALIZING_SUCCESS = 'INITIALIZING_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n      case INITIALIZING_SUCCESS:\r\n          return{\r\n              ...state,\r\n              initialized: true\r\n          }\r\n        default:\r\n            return state\r\n    };\r\n}\r\n\r\nconst initializingSuccess = () => ({type: INITIALIZING_SUCCESS});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(getAuthMe());\r\n    promise.then(() => {\r\n        dispatch(initializingSuccess())\r\n    })\r\n}\r\n","import React from 'react';\r\nimport loader from '../../../assets/images/loader.svg';\r\nimport module from '../common.module.css';\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <div className={module.loader}>\r\n            <img src={loader} alt='Loading...'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Header.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"Header\">\r\n      <div className=\"HeaderBody\">\r\n        <h1>social network</h1>\r\n        {props.isAuth\r\n          ? <div className='HeaderRight'>\r\n              <NavLink className='HeaderUserBlock' to='/profile'>{props.login}</NavLink>\r\n              <a className='login' onClick={() => props.logout()} href='#'>Logout</a>\r\n            </div>\r\n          : <NavLink className='login' to='/login'>Login</NavLink>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { logout } from '../../redux/authReducer';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n  render(){\r\n    return(\r\n      <Header isAuth={this.props.isAuth} login={this.props.login} logout={this.props.logout}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst mstp = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n})\r\n\r\nexport default connect(mstp,{logout})(HeaderContainer);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Status = (props) => {\r\n    const [status, setStatus] = useState(props.status);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        if(props.isOwner){\r\n            setEditMode(true);\r\n        }\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    return(\r\n        <div className='status'>\r\n            {editMode &&\r\n                <input onBlur={deactivateEditMode} onChange={(e)=>setStatus(e.currentTarget.value)} \r\n                value={status} autoFocus/> \r\n                \r\n            }\r\n            {!editMode && \r\n                <span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status;","import React from 'react';\r\nimport m from '../../Users/users.module.css';\r\n\r\nconst FollowButton = ({followed,unfollow,follow,userId,followingInProgress}) => {\r\n    return(\r\n            <div className={m.btnBlock}>\r\n               {followed\r\n                ?<button disabled={followingInProgress && followingInProgress.some(id => id===userId)}  \r\n                onClick={() => unfollow(userId)}>Unfollow</button>\r\n                :<button disabled={followingInProgress && followingInProgress.some(id => id===userId)} \r\n                onClick={() => follow(userId)}>Follow</button>\r\n                } \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default FollowButton;","import React from 'react';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport FollowButton from '../../common/FollowButton/FollowButton';\r\n\r\nconst ProfilePhoto = (props) => {\r\n  return (\r\n    <div className='profilePhoto'>\r\n      <img src={props.profile.photos.large ? props.profile.photos.large : userPhoto} alt='' />\r\n      {props.isOwner\r\n        &&\r\n        <div className='photoInput'>\r\n          <input type='file' onChange={(e) => props.updatePhoto(e.target.files[0])} />\r\n          <div>click to change photo</div>\r\n        </div>\r\n      }\r\n      {!props.isOwner &&\r\n        <div className='followingBlock'>\r\n          <FollowButton followed={props.isFollowed}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            userId={props.profile.userId} />\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default ProfilePhoto;\r\n","import React from 'react';\r\nimport '../Profile.css';\r\nimport Status from './status';\r\nimport ProfilePhoto from './ProfilePhoto';\r\n\r\nconst ProfileInfo = (props) => {\r\n  return (\r\n    <div className='profileInfo'>\r\n      <ProfilePhoto profile={props.profile} \r\n      updatePhoto={props.updatePhoto} \r\n      isOwner={props.isOwner}\r\n      isFollowed={props.isFollowed}\r\n      unfollow={props.unfollow}\r\n      follow={props.follow}/>\r\n      <Status status={props.status} \r\n      updateStatus={props.updateStatus} isOwner={props.isOwner}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ProfileInfo;","import React, { useState } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport '../Profile.css';\r\nimport editIcon from '../../../assets/images/editIcon.svg';\r\nimport saveIcon from '../../../assets/images/saveIcon.svg';\r\n\r\nconst ProfileContacts = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.updateProfile(formData).then(()=> {\r\n      setEditMode(false)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='contacts'>\r\n      {!editMode\r\n        ? <Contacts activateEditMode={activateEditMode} profile={props.profile} isOwner={props.isOwner}/>\r\n        : <ContactsReduxForm onSubmit={onSubmit} initialValues={props.profile} contacts={props.profile.contacts} />\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nconst Contacts = (props) => {\r\n  return (\r\n    <div className='contactsBody'>\r\n      <div className='aboutMeBlock'>\r\n        <div className='aboutMeItem'>\r\n          <div className='aboutMeTitle'>Full Name</div><div className='aboutMeInfo'>{props.profile.fullName}</div>\r\n        </div>\r\n        <div className='aboutMeItem'>\r\n          <div className='aboutMeTitle'>Looking for a job</div><div className='aboutMeInfo'>{props.profile.lookingForAJob ? 'Yes' : 'No'}</div>\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n          <div className='aboutMeItem'>\r\n            <div className='aboutMeTitle'>My professional skills</div><div className='aboutMeInfo'>{props.profile.lookingForAJobDescription}</div>\r\n          </div>\r\n        }\r\n        <div className='aboutMeItem'>\r\n          <div className='aboutMeTitle'>About Me</div><div className='aboutMeInfo'>{props.profile.aboutMe}</div>\r\n        </div>\r\n      </div>\r\n      <div className='contactsBlock'>\r\n        {Object.keys(props.profile.contacts).map(key =>\r\n          <div key={key} className='contactsItem'>\r\n            <div>{key}</div>\r\n            <div>\r\n              {props.profile.contacts[key]\r\n                ? <a href={props.profile.contacts[key]} target=\"_blank\" rel=\"noopener noreferrer\">{props.profile.contacts[key]}</a>\r\n                : <span>empty</span>\r\n              }\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {props.isOwner &&\r\n        <div className='contactsButton'>\r\n          <img src={editIcon} onClick={() => props.activateEditMode()} alt=''/>\r\n        </div>\r\n      }\r\n      \r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nconst ContactsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className='contactsBody'>\r\n      {props.error &&\r\n        <div className='contactsError'>{props.error}</div>\r\n      }\r\n      <div className='aboutMeBlock'>\r\n        <div className='aboutMeItem'>\r\n          <div className='aboutMeTitle'>Full Name</div>\r\n          <Field className='aboutMeField' name={'fullName'} component='input' autoComplete=\"off\"/>\r\n        </div>\r\n        <div className='aboutMeItem'>\r\n          <div className='aboutMeTitle'>Looking for a job</div>\r\n          <Field className='aboutMeField' name={'lookingForAJob'} component='input' type='checkbox' autoComplete=\"off\"/>\r\n        </div>\r\n        <div className='aboutMeItem'>\r\n          <div className='aboutMeTitle'>My professional skills</div>\r\n          <Field className='aboutMeField' name={'lookingForAJobDescription'} component='textarea' />\r\n        </div>\r\n        <div className='aboutMeItem'>\r\n          <div className='aboutMeTitle'>About Me</div>\r\n          <Field className='aboutMeField' name={'aboutMe'} component='textarea' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='contactsBlock'>\r\n      {Object.keys(props.contacts).map(key =>\r\n        <div key={key} className='contactsItem'>\r\n          <div>{key}</div>\r\n          <Field className='aboutMeField' name={'contacts.' + key} \r\n          component='input' placeholder={'add ' + key + ' link'}  autoComplete=\"off\"/>\r\n        </div>\r\n      )}\r\n      </div>\r\n      <div className='contactsButton'>\r\n        <button></button>\r\n        <img className='saveButton' src={saveIcon} alt=''/>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst ContactsReduxForm = reduxForm({ form: 'contacts' })(ContactsForm)\r\n\r\n\r\n\r\n\r\nexport default ProfileContacts;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport ProfileContacts from './ProfileContacts/ProfileContacts';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className='profile'>\r\n        <ProfileInfo profile={props.profile} \r\n        status={props.status} \r\n        updateStatus={props.updateStatus}\r\n        updatePhoto={props.updatePhoto}\r\n        isFollowed={props.isFollowed}\r\n        follow={props.follow}\r\n        unfollow={props.unfollow}\r\n        isOwner={props.isOwner}/>\r\n        <ProfileContacts profile={props.profile} updateProfile={props.updateProfile} isOwner={props.isOwner}/>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default Profile;\r\n","import { ProfileAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nconst SET_PROFILE = 'SET_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_PHOTO = 'SET_PHOTO';\r\nconst SET_IS_FOLLOWED = 'SET_IS_FOLLOWED';\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    status: '',\r\n    loader: false,\r\n    isFollowed: false,\r\n}\r\n\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return{\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_PHOTO:\r\n            return{\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        case SET_IS_FOLLOWED:\r\n            return{\r\n                ...state,\r\n                isFollowed: action.followed\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n}\r\n\r\nconst setProfile = (profile) => ({type: SET_PROFILE, profile});\r\nconst setStatus = (status) => ({type: SET_STATUS, status});\r\nconst setPhoto = (photos) => ({type: SET_PHOTO, photos});\r\nconst setIsFollowed = (followed) => ({type: SET_IS_FOLLOWED, followed});\r\n\r\nexport const getProfile = (userId) => async(dispatch) => {\r\n    let response = await ProfileAPI.getProfile(userId);\r\n    dispatch(setProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async(dispatch) => {\r\n    let response = await ProfileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status) => async(dispatch) => {\r\n    let response = await ProfileAPI.updateStatus(status);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const updatePhoto = (photo) => async(dispatch) => {\r\n    let response = await ProfileAPI.updatePhoto(photo);\r\n        if(response.data.resultCode === 0){\r\n        dispatch(setPhoto(response.data.data.photos))\r\n    }\r\n}\r\nexport const updateProfile = (profile) => async(dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    let response = await ProfileAPI.updateProfile(profile);\r\n        if(response.data.resultCode === 0){\r\n        dispatch(getProfile(userId));\r\n    }else{\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('contacts', {_error: message}));\r\n        return Promise.reject(message)\r\n    }\r\n}\r\nexport const getFollow = (userId) => async(dispatch) => {\r\n    let response = await ProfileAPI.getFollow(userId);\r\n    dispatch(setIsFollowed(response.data));\r\n}\r\n","import { UsersAPI } from '../api/api';\r\nimport { getFollow } from './profileReducer';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst SET_PAGE = 'SET_PAGE';\r\nconst FOLLOW_TOGGLE = 'FOLLOW_TOGGLE';\r\nconst LOADING = 'LOADING';\r\nconst IS_FOLLOWING_PROGRESS = 'IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 12,\r\n    totalCount: 0,\r\n    page: 1,\r\n    loading: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return{\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return{\r\n                ...state,\r\n                totalCount: action.count\r\n            }\r\n        case SET_PAGE:\r\n            return{\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        case LOADING:\r\n            return{\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        \r\n        case FOLLOW_TOGGLE:\r\n            return{\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if(user.id === action.userId){\r\n                        return{...user, followed: !user.followed}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case IS_FOLLOWING_PROGRESS:\r\n            return{\r\n                ...state,\r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default usersReducer;\r\n\r\nconst setUsers = (users) => ({type: SET_USERS, users});\r\nconst setTotalCount = (count) => ({type: SET_TOTAL_COUNT, count});\r\nconst setPage = (page) => ({type: SET_PAGE, page});\r\nconst followToggle = (userId) => ({type: FOLLOW_TOGGLE, userId});\r\nconst loading = (loading) => ({type: LOADING, loading});\r\nconst isFollowingProgress = (isFetching,userId) => ({type: IS_FOLLOWING_PROGRESS, isFetching,userId});\r\n\r\nexport const getUsers = (pageSize,page) => async (dispatch) => {\r\n    dispatch(loading(true))\r\n    dispatch(setPage(page))\r\n    let response = await UsersAPI.getUsers(pageSize,page);\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalCount(response.data.totalCount));\r\n    dispatch(loading(false))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(isFollowingProgress(true, userId))\r\n    let response = await UsersAPI.follow(userId);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(followToggle(userId));\r\n        dispatch(getFollow(userId));\r\n    }\r\n    dispatch(isFollowingProgress(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(isFollowingProgress(true, userId))\r\n    let response = await UsersAPI.unfollow(userId);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(followToggle(userId));\r\n        dispatch(getFollow(userId));\r\n    }\r\n    dispatch(isFollowingProgress(false, userId))\r\n}\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport Loader from '../common/Loader/Loader';\r\nimport {connect} from 'react-redux';\r\nimport { getProfile,getStatus,updateStatus, updatePhoto, updateProfile,getFollow } from '../../redux/profileReducer';\r\nimport { follow, unfollow } from '../../redux/usersReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n  refreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n      userId = this.props.userId;\r\n      if(!userId){\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n    this.props.getFollow(userId)\r\n  }\r\n  componentDidMount(){\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(prevProps.match.params.userId !== this.props.match.params.userId || this.props.userId !== prevProps.userId){\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render(){\r\n    if(!this.props.profile) return <Loader/>\r\n    return (\r\n      <Profile profile={this.props.profile} \r\n      status={this.props.status} \r\n      updateStatus={this.props.updateStatus}\r\n      updatePhoto={this.props.updatePhoto}\r\n      updateProfile={this.props.updateProfile}\r\n      isOwner={!this.props.match.params.userId}\r\n      isFollowed={this.props.isFollowed}\r\n      follow={this.props.follow}\r\n      unfollow={this.props.unfollow}\r\n      />\r\n    )\r\n  }\r\n};\r\n\r\nconst mstp = (state) => ({\r\n  loader: state.profilePage.loader,\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n  isFollowed: state.profilePage.isFollowed,\r\n})\r\nexport default compose(\r\n  withRouter,\r\n  connect(mstp,{getProfile,getStatus,updateStatus,updatePhoto,updateProfile,getFollow, follow, unfollow})\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport m from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FollowButton from '../common/FollowButton/FollowButton';\r\n\r\nconst User = (props) => {\r\n    return(\r\n        <div className={m.user}>\r\n            <div className={m.userPhoto}>\r\n                <NavLink to={'/profile/' + props.user.id}>\r\n                    <img src={props.user.photos.small || userPhoto} alt={props.user.name}/>\r\n                </NavLink>\r\n            </div>\r\n            <h3>{props.user.name}</h3>\r\n            <div className={m.status}>\r\n                <p>{props.user.status}</p>\r\n            </div>\r\n            <FollowButton followed={props.user.followed}\r\n            unfollow={props.unfollow}\r\n            follow={props.follow}\r\n            userId={props.user.id}\r\n            followingInProgress={props.followingInProgress}\r\n            />\r\n            {/* <div className={m.btnBlock}>\r\n               {props.user.followed\r\n                ?<button disabled={props.followingInProgress.some(id => id===props.user.id)}  \r\n                onClick={() => props.unfollow(props.user.id)}>Unfollow</button>\r\n                :<button disabled={props.followingInProgress.some(id => id===props.user.id)} \r\n                onClick={() => props.follow(props.user.id)}>Follow</button>\r\n                } \r\n            </div> */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React, { useState } from 'react';\r\nimport module from '../common.module.css';\r\nimport classnames from 'classnames';\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = props.totalCount / props.pageSize;\r\n    let pages = [];\r\n    for( let i = 1; i <= pagesCount; i++){\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionSize = 10;\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return(\r\n        <div className={module.paginator}>\r\n            {portionNumber > 1 &&\r\n               <span onClick={() => { setPortionNumber(portionNumber - 1) }}>&laquo;</span>\r\n            }\r\n            {pages.filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n            .map(page => <span key={page} onClick={()=> props.setPage(page)}\r\n            className={classnames(props.page === page && module.currentPage)} >{page}</span>)}\r\n            {portionCount > portionNumber &&\r\n               <span onClick={() => { setPortionNumber(portionNumber + 1) }} >&raquo;</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport User from './User';\r\nimport m from './users.module.css';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport Loader from '../common/Loader/Loader';\r\n\r\nconst Users = (props) => {\r\n\r\n    return(\r\n        <div className={m.users}>\r\n\r\n            <Paginator totalCount={props.totalCount}\r\n             pageSize={props.pageSize} \r\n             setPage={props.setPage} \r\n             page={props.page}/>\r\n             \r\n            {props.loading\r\n            ?<Loader/>\r\n            :props.users.map(user => \r\n            <User key={user.id} \r\n            user={user} \r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            followingInProgress={props.followingInProgress}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport {getUsers,follow,unfollow} from '../../redux/usersReducer';\r\n \r\nclass UsersContainer extends React.Component{\r\n    componentDidMount(){\r\n        this.props.getUsers(this.props.pageSize, this.props.page)\r\n    }\r\n    setPage = (page) => {\r\n        this.props.getUsers(this.props.pageSize, page)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Users users={this.props.users} \r\n            totalCount={this.props.totalCount}\r\n            pageSize={this.props.pageSize}\r\n            page={this.props.page}\r\n            setPage={this.setPage}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            loading={this.props.loading}\r\n            followingInProgress={this.props.followingInProgress}\r\n             />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mstp = (state) => ({\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    page: state.usersPage.page,\r\n    totalCount: state.usersPage.totalCount,\r\n    loading: state.usersPage.loading,\r\n    followingInProgress: state.usersPage.followingInProgress,\r\n})\r\n\r\nexport default connect(mstp, {getUsers,follow,unfollow})(UsersContainer);","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport { Route, withRouter, Redirect } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { initializeApp } from './redux/appreducer';\nimport Loader from './components/common/Loader/Loader';\nimport { compose } from 'redux';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport UsersContainer from './components/Users/UsersContainer';\n// const ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n// const UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) return <Loader />\n    return (\n      <div className=\"App\">\n        <HeaderContainer />\n        <div className='container'>\n          <NavBar />\n          <div className=\"Content\">\n            <Route path=\"/\" render={() => <Redirect to='/profile'/>} />\n            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/login\" render={() => <Login />} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mstp = (state) => ({\n  initialized: state.app.initialized,\n  isAuth: state.auth.isAuth,\n})\nexport default compose(\n  withRouter,\n  connect(mstp, { initializeApp })\n)(App);\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport { profileReducer } from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer} from \"redux-form\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { appReducer } from \"./appreducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"users_users__2jgfR\",\"user\":\"users_user__2En9t\",\"userPhoto\":\"users_userPhoto__31xXW\",\"status\":\"users_status__2Yjxp\",\"btnBlock\":\"users_btnBlock__29Ml-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"common_paginator__tpEMk\",\"currentPage\":\"common_currentPage__3wouS\",\"loader\":\"common_loader__1kjhh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"navbar_Navbar__24WiV\",\"navbarBody\":\"navbar_navbarBody__1IMbQ\",\"active\":\"navbar_active__10fXh\"};","module.exports = __webpack_public_path__ + \"static/media/user.49c8e403.jpg\";"],"sourceRoot":""}